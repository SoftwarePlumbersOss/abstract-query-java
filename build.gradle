/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/java_library_plugin.html
 */

plugins {
  id "org.jdrupes.mdoclet" version "1.0.10"
}

String propValue(String propName, String defValue) {
    (project.hasProperty(propName) && project.getProperty(propName)) ? project.getProperty(propName) : defValue
}

version = propValue("ci_version","master");
group = "com.softwareplumbers.oss"

def SNAPSHOT_BUILDS = ["master"];

if (SNAPSHOT_BUILDS.contains(version)) { version = version + "-SNAPSHOT" };

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'maven'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven { url propValue("proxyMavenCentral", "https://repo.maven.apache.org/maven2/") }
    maven { url "https://nexus.softwareplumbers.com/repository/maven-oss" }
    maven { url 'https://nexus.softwareplumbers.com/repository/maven-oss-snapshot' }
}

uploadArchives {
    dependsOn check
    repositories {
        mavenDeployer {
            repository(url: "https://nexus.softwareplumbers.com/repository/maven-oss") {
                authentication(userName: propValue("mavenUploadUser",""), password: propValue("mavenUploadPassword",""))
            }
            snapshotRepository(url: "https://nexus.softwareplumbers.com/repository/maven-oss-snapshot") {
                authentication(userName: propValue("mavenUploadUser",""), password: propValue("mavenUploadPassword",""))
            }
        }
    }
}

test {
	systemProperties = System.properties
	testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {

    compile group: 'javax.json', name: 'javax.json-api', version: '1.0'
    compile group: 'com.softwareplumbers.oss', name: 'immutable-list', version: '0.0.5'
    compile group: 'com.softwareplumbers.oss', name: 'json-view', version: '0.0.6'
    compile group: 'com.softwareplumbers.oss', name: 'abstract-pattern', version: '0.0.14'
		
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation group: 'org.glassfish', name: 'javax.json', version: '1.0.4'
}

jar {
    baseName 'abstract-query-java'
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

